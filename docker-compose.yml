version: '3'

services:
    consumer:
        container_name: randomqueue-consumer
        image: randomqueue_php7-cli
        build:
            context: docker/php7-cli
            args:
                TIMEZONE: ${TIMEZONE}
        environment:
            APP_ENV: docker
        links:
            - mysql
            - rabbit
        volumes:
            - "project-root:/randomqueue"
            - "./logs/consumer:/var/log/php"
        command: "php /randomqueue/bin/console queue:consumer"

    php-fpm:
        container_name: randomqueue-php-fpm
        image: randomqueue_php-fpm
        build:
            context: docker/php7-fpm
            args:
                TIMEZONE: ${TIMEZONE}
        environment:
            APP_ENV: docker
        links:
            - mysql
        volumes:
            - "project-root:/var/www"
            - "./logs/php-fpm:/var/log/php"
    nginx:
        container_name: randomqueue-nginx
        image: randomqueue_nginx
        build:
            context: docker/nginx
            args:
                MAX_EXECUTION_TIME: ${MAX_EXECUTION_TIME}
                SERVER_NAME: ${SERVER_NAME}
                WWW_ROOT_DIR: ${WWW_ROOT_DIR}
        links:
            - php-fpm
        ports:
            - "8080:80"
        volumes:
            - "project-root:/var/www"
            - "./logs/nginx:/var/log/nginx"
    mysql:
        container_name: randomqueue-mysql
        image: randomqueue_mysql
        build:
            context: docker/mysql
        volumes:
            - "./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro"
            - "db-data:/var/lib/mysql"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - "${MYSQL_PORT}:3306"
    rabbit:
        container_name: randomqueue-rabbit
        image: randomqueue_rabbit
        build:
            context: docker/rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
#           This currently not working with docker-compose when exposing /var/log/rabbitmq as volume (permission denied)
#            RABBITMQ_LOG_BASE: /var/log/rabbitmq/log
#            RABBITMQ_LOGS: ~
#            RABBITMQ_SASL_LOGS: ~
        volumes:
            - "rabbit-data:/var/lib/rabbitmq"
#            - "./logs/rabbitmq/:/var/log/rabbitmq"
        ports:
            - "5672:5672"
            - "15672:15672"

volumes:
    project-root:
        driver: local
        driver_opts:
            type: none
            device: ${PWD}
            o: bind
    db-data:
    rabbit-data:
